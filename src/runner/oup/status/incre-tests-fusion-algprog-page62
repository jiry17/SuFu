
List :: List. <nil Unit | cons {Int,List}>
 nil : Unit -> List'. <nil Unit | cons {Int,List'}>
 cons : {Int,List} -> List'. <nil Unit | cons {Int,List'}>
 incre : Int -> {Int, Int}
Number :: {Int, List}
double : Number -> {Int, List'. <nil Unit | cons {Int,List'}>}
dnum : Int
ratio : Int
head : List -> Int
multi : List -> {Int, List}
round : List -> Int
repr : List -> List'. <nil Unit | cons {Int,List'}>
val : List -> Bool
main : List -> Int

size: 239
compress-num: 1
label-num: 7
rewrite-size: 13
0.028558