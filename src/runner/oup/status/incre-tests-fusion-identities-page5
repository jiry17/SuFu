
List :: List. <nil Unit | cons {Int,List}>
nil : Unit -> List'. <nil Unit | cons {Int,List'}>
cons : {Int,List} -> List'. <nil Unit | cons {Int,List'}>
NList :: NList. <single List | ncons {List,NList}>
single : List -> NList'. <single List | ncons {List,NList'}>
ncons : {List,NList} ->
        NList'. <single List | ncons {List,NList'}>
head : NList -> List
map : (List->Int) -> NList -> List'. <nil Unit | cons {Int,List'}>
sum : List -> Int
product : List -> Int
tails : List -> NList'. <single List | ncons {List,NList'}>
main : List -> Int

size: 112
compress-num: 1
label-num: 7
rewrite-size: 15
0.01364