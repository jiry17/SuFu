
Nat :: Nat. <z Unit | s Nat>
 z : Unit -> Nat'. <z Unit | s Nat'>
 s : Nat -> Nat'. <z Unit | s Nat'>
 INat :: INat. <positive Nat | negative Nat>
positive : Nat -> INat'. <positive Nat | negative Nat>
negative : Nat -> INat'. <positive Nat | negative Nat>
nsum : Nat -> Int
itoint : INat -> Int
EInt :: EInt. <zero Unit | sub1 EInt | add1 EInt>
zero : Unit -> EInt'. <zero Unit | sub1 EInt' | add1 EInt'>
sub1 : EInt -> EInt'. <zero Unit | sub1 EInt' | add1 EInt'>
add1 : EInt -> EInt'. <zero Unit | sub1 EInt' | add1 EInt'>
repr : EInt -> INat'. <positive Nat | negative Nat>
target : EInt -> EInt'. <zero Unit | sub1 EInt' | add1 EInt'>
main : EInt -> Int

size: 129
compress-num: 1
label-num: 10
rewrite-size: 18
0.015892