
List :: List. <nil Unit | cons {Int,List}>
nil : Unit -> List'. <nil Unit | cons {Int,List'}>
cons : {Int,List} -> List'. <nil Unit | cons {Int,List'}>
LineList :: LineList. <lnil Unit | lcons {List,LineList}>
lnil : Unit -> LineList'. <lnil Unit | lcons {List,LineList'}>
lcons : {List,LineList} ->
        LineList'. <lnil Unit | lcons {List,LineList'}>
Plan :: LineList
PlanList :: PlanList. <pnil Unit | pcons {Plan,PlanList}>
pnil : Unit -> PlanList'. <pnil Unit | pcons {Plan,PlanList'}>
pcons : {Plan,PlanList} ->
        PlanList'. <pnil Unit | pcons {Plan,PlanList'}>
lim : Int
size : List -> Int
sum : List -> Int
line_cost : List -> Int
merge : PlanList -> PlanList -> PlanList
head_size : Plan -> Int
extend : Int ->
         PlanList ->
         PlanList'. <pnil Unit | pcons {Plan,PlanList'}>
generate : List -> PlanList'. <pnil Unit | pcons {Plan,PlanList'}>
eval : Plan -> Int
min : Int -> Int -> Int
get_best : PlanList -> Int
main : List -> Int

size: 291
compress-num: 1
label-num: 12
rewrite-size: 30
0.034998