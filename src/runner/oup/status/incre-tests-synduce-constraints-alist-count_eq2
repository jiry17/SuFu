
List :: List. <nil Unit | cons {Int,List}>
 nil : Unit -> List'. <nil Unit | cons {Int,List'}>
 cons : {Int,List} -> List'. <nil Unit | cons {Int,List'}>
 Nat :: Nat. <z Unit | s Nat>
z : Unit -> Nat'. <z Unit | s Nat'>
s : Nat -> Nat'. <z Unit | s Nat'>
AList :: AList. <anil Unit | acons {Int,Nat,AList}>
anil : Unit -> AList'. <anil Unit | acons {Int,Nat,AList'}>
acons : {Int,Nat,AList} ->
        AList'. <anil Unit | acons {Int,Nat,AList'}>
is_unique : AList -> Bool
w : Int
spec : List -> Int
repr : AList -> List'. <nil Unit | cons {Int,List'}>
n2i : Nat -> Int
target : AList -> AList'. <anil Unit | acons {Int,Nat,AList'}>
main : AList -> Int

size: 198
compress-num: 1
label-num: 9
rewrite-size: 18
0.019966