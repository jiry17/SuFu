
List :: List. <elt Int | cons {Int,List}>
 elt : Int -> List'. <elt Int | cons {Int,List'}>
 cons : {Int,List} -> List'. <elt Int | cons {Int,List'}>
 CnList :: CnList. <sglt Int | cat {CnList,Int,CnList}>
sglt : Int -> CnList'. <sglt Int | cat {CnList',Int,CnList'}>
cat : {CnList,Int,CnList} ->
      CnList'. <sglt Int | cat {CnList',Int,CnList'}>
max : Int -> Int -> Int
cat_list : List -> List -> List'. <elt Int | cons {Int,List'}>
repr : CnList -> List'. <elt Int | cons {Int,List'}>
spec : List -> Int
main : CnList -> Int

size: 133
compress-num: 1
label-num: 8
rewrite-size: 14
0.016096