
Tree :: Tree. <leaf Int | node {Int,Tree,Tree}>
 leaf : Int -> Tree'. <leaf Int | node {Int,Tree',Tree'}>
 node : {Int,Tree,Tree} ->
        Tree'. <leaf Int | node {Int,Tree',Tree'}>
 TreeMemo :: TreeMemo. <mleaf {Int,Int} | mnode {Int,Int,TreeMemo,
                                                TreeMemo}>
mleaf : {Int,Int} ->
        TreeMemo'. <mleaf {Int,Int} | mnode {Int,Int,TreeMemo',
                                             TreeMemo'}>
mnode : {Int,Int,TreeMemo,TreeMemo} ->
        TreeMemo'. <mleaf {Int,Int} | mnode {Int,Int,TreeMemo',
                                             TreeMemo'}>
memo : TreeMemo -> Int
max : Int -> Int -> Int
tmax : TreeMemo -> Int
is_memo : TreeMemo -> Bool
repr : TreeMemo -> Tree'. <leaf Int | node {Int,Tree',Tree'}>
key : Int
spec : Tree -> Bool
target : TreeMemo -> TreeMemo
main : TreeMemo -> Bool

size: 199
compress-num: 1
label-num: 10
rewrite-size: 20
0.018797