
Inductive Tree;

mod2 = \x: Int. 
    - x (* (/ x 2) 2);

is_even = fix (
    \f: Tree -> Bool. \t: Tree. 
    match t with
      elt a -> == (mod2 a) 0
    | node {a, l, r} -> and (and (== (mod2 a) 0) (f l)) (f r)
    end
);

spec = fix (
    \f: Tree -> Int. \t: Tree. 
    match t with
      elt a -> mod2 a
    | node {a, l, r} -> + (mod2 a) (+ (f l) (f r))
    end
);

target = fix (
    \f: Tree -> Unit. \t: Tree. 
    match t with
      elt a -> Unit
    | node {a, l, r} -> Unit
    end
);

main = \t: Tree. 
    if (is_even t) then 0
    else 0;
