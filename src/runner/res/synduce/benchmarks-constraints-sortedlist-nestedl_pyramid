
ðŸ“¢ Solving problem in file [36m/home/jiry/2023S/Synduce/benchmarks/constraints/sortedlist/nestedl_pyramid.ml[0m with [36mCaml[0m syntax.

----------------------------------------------------------------------------------------------------
[44m INFO :[0m  Î¨ (s1, s0) := âˆ€ x : [33mnested_list[0m. ([34mspec[0m o [34mclist_to_list[0m)(x) = [34mtarget[0m(x)
[44m INFO :[0m  specâŸ¨âŸ©(): nested_list -> (int * int * bool)  =  
[44m INFO :[0m  targetâŸ¨s1, s0âŸ©(): nested_list -> (int * int * bool) [95mÂ«[0m[95mrequires[0m [34mis_sorted[0m[95mÂ»[0m =  
[44m INFO :[0m clist_to_list(x) = [34mx[0m
[44m INFO :[0m  is_sortedâŸ¨âŸ©(): nested_list -> bool  =  
[44m INFO :[0m Refinement step 1.
[44m INFO :[0m [30m[102m		 segis Refinement step 1:0 [0;30m[0m
[44m INFO :[0m [30m[102m		 se2gis Refinement step 1:0 [0;30m[0m
[44m INFO :[0m Checking solution...
[44m INFO :[0m ... finished in 0.0197s
[44m INFO :[0m [30m[102m		 se2gis Refinement step 2:0 [0;30m[0m
[44m INFO :[0m Checking solution (bounded check)...
[44m INFO :[0m ... finished in 0.0100s
[44m INFO :[0m Refinement step 2.
[44m INFO :[0m [30m[102m		 segis Refinement step 2:0 [0;30m[0m
[44m INFO :[0m Checking solution...
[44m INFO :[0m Checking solution (bounded check)...
[44m INFO :[0m ... finished in 0.0087s
[44m INFO :[0m Refinement step 3.
[44m INFO :[0m [30m[102m		 segis Refinement step 3:0 [0;30m[0m
[44m INFO :[0m ... finished in 0.0433s

------------------------------------------------------------------------------------------------[0]-
[44m INFO :[0m Total time spent in solvers:
        Z3-SMT     [  31 instances] 0.306s 
        CVC-SyGuS  [  22 instances] 2.135s 
        > TOTAL    [  53 instances]: 2.442s 
[44m INFO :[0m Solution found in 1.0965s (7.4% verifying):

[31mlet[0m [36ms0[0m ([34ma0[0m, [34ma1[0m) [34mb[0m [31m=[0m (min [34ma0[0m [34ma0[0m, [34ma1[0m, [36mtrue[0m)

[31mlet[0m [36ms1[0m [34mc[0m ([34mx0[0m, [34mx1[0m, [34mx2[0m) [31m=[0m (min [34mc[0m [34mx0[0m, max [34mc[0m [34mx1[0m, ([34mx2[0m && ([34mc[0m â‰¥ [34mx0[0m)) && ([34mc[0m â‰¥ [34mx1[0m))

[31mlet rec[0m [36mtarget[0m [31m=[0m [33mfunction[0m [3mLine[0m(x) -> [34ms0[0m ([34minter[0m [34mx[0m) [36mtrue[0m [33m| [0m[3mNCons[0m(hd, tl) -> [34ms1[0m ([34mplmin[0m [34mhd[0m) ([34mtarget[0m [34mtl[0m)
[31mand[0m [36minter[0m [31m=[0m
  [33mfunction[0m [3mElt[0m(x) -> ([34mx[0m, [34mx[0m) [33m| [0m[3mCons[0m(hd, tl) -> let (lo, hi) = [34minter[0m [34mtl[0m in
                                              (min [34mhd[0m [34mlo[0m, max [34mhd[0m [34mhi[0m)
[31mand[0m [36mplmin[0m [31m=[0m [33mfunction[0m [3mElt[0m(x) -> [34mx[0m [33m| [0m[3mCons[0m(hd, tl) -> let lo = [34mplmin[0m [34mtl[0m in
                                                   min [34mhd[0m [34mlo[0m


