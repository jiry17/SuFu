
List :: List. <nil Unit | cons {Int,List}>
nil : Unit -> List'. <nil Unit | cons {Int,List'}>
cons : {Int,List} -> List'. <nil Unit | cons {Int,List'}>
Point :: {Int, Int}
PointList :: PointList. <ponil Unit | pocons {Point,PointList}>
ponil : Unit ->
        PointList'. <ponil Unit | pocons {Point,PointList'}>
pocons : {Point,PointList} ->
         PointList'. <ponil Unit | pocons {Point,PointList'}>
Plan :: {PointList, PointList}
PlanList :: PlanList. <pnil Unit | pcons {Plan,PlanList}>
pnil : Unit -> PlanList'. <pnil Unit | pcons {Plan,PlanList'}>
pcons : {Plan,PlanList} ->
        PlanList'. <pnil Unit | pcons {Plan,PlanList'}>
sqr : Int -> Int
dis : Point -> Point -> Int
head : PointList -> {Int, Int}
extend : Point -> PlanList -> PlanList
generate : List -> PlanList'. <pnil Unit | pcons {Plan,PlanList'}>
eval_plist : Point -> PointList -> Int
min : Int -> Int -> Int
get_best : PlanList -> Int
main : List -> Int


Inductive List;

Point = {Int, Int};

Inductive PointList;

Plan = {PointList, PointList};

Inductive PlanList;

sqr = \x: Int. 
    * x x;

dis = \x: Point. \y: Point. 
    + (sqr (- x.1 y.1)) (sqr (- x.2 y.2));

head = \xs: PointList. 
    match xs with
      ponil _ -> {0, 0}
    | pocons {h, _} -> h
    end
;

extend = \p: Point. 
    fix (
    \f: PlanList -> PlanList. \xs: PlanList. 
    match xs with
      pnil _ -> xs
    | pcons {h, t} -> 
        let h1 = (align (label {pocons {p, (unlabel h ).1}, (unlabel h ).2} ) ) in 
            let h2 = (align (label {(unlabel h ).1, pocons {p, (unlabel h ).2}} ) ) in 
                pcons {h1, pcons {h2, f t}}
    end
);

generate = fix (
    \f: Int -> List -> PlanList. \pos: Int. \xs: List. 
    match xs with
      nil _ -> pnil Unit
    | cons {w, nil _} -> 
        let polist = (pocons {{pos, w}, ponil Unit}) in 
            pcons {let tmp1 = {polist, polist} in 
                align (label tmp1 ) , pnil Unit}
    | cons {h, t} -> 
        let res = (f (+ pos 1) t) in 
            extend {pos, h} res
    end
) 0;

eval_plist = fix (
    \f: Point -> PointList -> Int. \pre: Point. \xs: PointList. 
    match xs with
      ponil _ -> 0
    | pocons {p, t} -> + (dis p pre) (f p t)
    end
);

min = \a: Int. \b: Int. 
    if (< a b) then a
    else b;

get_best = let eval = (\p: Plan. 
    let first = (head p.1) in 
        + (eval_plist first p.1) (eval_plist first p.2)) in 
        fix (
        \f: PlanList -> Int. \xs: PlanList. 
        match xs with
          pnil _ -> 1000
        | pcons {h, t} -> min (align (eval (unlabel h )) ) (f t)
        end
    );

main = \xs: List. 
    get_best (generate xs);
align term #0: compress[0] {PointList. <ponil Unit | pocons {Point,PointList}>,PointList}
align@0 create@0 {pocons ({p,unlabel h.1}),unlabel h.2}
  p: {Int,Int}
  h: compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>}
  t: PlanList. <pnil Unit | pcons {compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>},PlanList}>
  xs: PlanList. <pnil Unit | pcons {compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>},PlanList}>
align term #1: compress[0] {PointList,PointList. <ponil Unit | pocons {Point,PointList}>}
align@1 create@0 {unlabel h.1,pocons ({p,unlabel h.2})}
  p: {Int,Int}
  h: compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>}
  h1: compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>}
  t: PlanList. <pnil Unit | pcons {compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>},PlanList}>
  xs: PlanList. <pnil Unit | pcons {compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>},PlanList}>
align term #2: compress[0] {PointList. <ponil Unit | pocons {Point,PointList}>,PointList. <ponil Unit | pocons {Point,PointList}>}
align@2 create@0 tmp1
  tmp1: {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>}
  xs: List. <nil Unit | cons {Int,List}>
  polist: PointList. <ponil Unit | pocons {{Int,Int},PointList}>
  w: Int
  pos: Int
align term #3: Int
align@3 eval (unlabel h)
  h: compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>}
  t: PlanList. <pnil Unit | pcons {compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>},PlanList}>
  xs: PlanList. <pnil Unit | pcons {compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>},PlanList}>
Components for compress:
  min [Int,Int] -> Int 11
  pocons [((Int * Int) * PointList. <ponil Unit | pocons {{Int,Int},PointList}>)] -> PointList. <ponil Unit | pocons {{Int,Int},PointList}> 2
  ponil [Bot] -> PointList. <ponil Unit | pocons {{Int,Int},PointList}> 2
  cons [(Int * List. <nil Unit | cons {Int,List}>)] -> List. <nil Unit | cons {Int,List}> 0
  nil [Bot] -> List. <nil Unit | cons {Int,List}> 0
  dis [(Int * Int),(Int * Int)] -> Int 6
  sqr [Int] -> Int 5
  head [PointList. <ponil Unit | pocons {{Int,Int},PointList}>] -> (Int * Int) 7

Components for align:
  min [Int,Int] -> Int 11
  eval_plist [(Int * Int),PointList. <ponil Unit | pocons {{Int,Int},PointList}>] -> Int 10
  pocons [((Int * Int) * PointList. <ponil Unit | pocons {{Int,Int},PointList}>)] -> PointList. <ponil Unit | pocons {{Int,Int},PointList}> 2
  ponil [Bot] -> PointList. <ponil Unit | pocons {{Int,Int},PointList}> 2
  cons [(Int * List. <nil Unit | cons {Int,List}>)] -> List. <nil Unit | cons {Int,List}> 0
  nil [Bot] -> List. <nil Unit | cons {Int,List}> 0
  dis [(Int * Int),(Int * Int)] -> Int 6
  sqr [Int] -> Int 5
  head [PointList. <ponil Unit | pocons {{Int,Int},PointList}>] -> (Int * Int) 7

Components for comb:
  min [Int,Int] -> Int 11
  pocons [((Int * Int) * PointList. <ponil Unit | pocons {{Int,Int},PointList}>)] -> PointList. <ponil Unit | pocons {{Int,Int},PointList}> 2
  ponil [Bot] -> PointList. <ponil Unit | pocons {{Int,Int},PointList}> 2
  cons [(Int * List. <nil Unit | cons {Int,List}>)] -> List. <nil Unit | cons {Int,List}> 0
  nil [Bot] -> List. <nil Unit | cons {Int,List}> 0
  dis [(Int * Int),(Int * Int)] -> Int 6
  sqr [Int] -> Int 5
  head [PointList. <ponil Unit | pocons {{Int,Int},PointList}>] -> (Int * Int) 7

align term #0: compress[0] {PointList. <ponil Unit | pocons {Point,PointList}>,PointList}
align@0 create@0 {pocons ({p,unlabel h.1}),unlabel h.2}
  p: {Int,Int}
  h: compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>}
  t: PlanList. <pnil Unit | pcons {compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>},PlanList}>
  xs: PlanList. <pnil Unit | pcons {compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>},PlanList}>
  (0) {h: compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((4) (4)) (Ponil Unit)),p: (3) (3),xs: Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((4) (4)) (Ponil Unit))) (Pnil Unit),t: Pnil Unit} @ {} -> compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((4) (4)) (Ponil Unit))
  (0) {h: compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((4) (4)) (Ponil Unit)),p: (2) (4),xs: Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((4) (4)) (Ponil Unit))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pnil Unit)),t: Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pnil Unit)} @ {} -> compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((4) (4)) (Ponil Unit))
  (0) {h: compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))),p: (2) (4),xs: Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pnil Unit),t: Pnil Unit} @ {} -> compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))
  (0) {h: compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((4) (4)) (Ponil Unit)),p: (1) (2),xs: Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((4) (4)) (Ponil Unit))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit)))),t: Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit)))} @ {} -> compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((4) (4)) (Ponil Unit))
  (0) {h: compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))),p: (1) (2),xs: Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit))),t: Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit))} @ {} -> compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))
  (0) {h: compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))),p: (1) (2),xs: Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit)),t: Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit)} @ {} -> compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))
  (0) {h: compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))),p: (1) (2),xs: Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit),t: Pnil Unit} @ {} -> compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))
  (0) {h: compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((4) (4)) (Ponil Unit)),p: (0) (1),xs: Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((4) (4)) (Ponil Unit))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pnil Unit)))))))),t: Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pnil Unit)))))))} @ {} -> compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pocons ((4) (4)) (Ponil Unit))
  (0) {h: compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))),p: (0) (1),xs: Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pnil Unit))))))),t: Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pnil Unit))))))} @ {} -> compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))
  (0) {h: compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))),p: (0) (1),xs: Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pnil Unit)))))),t: Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pnil Unit)))))} @ {} -> compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))
align term #1: compress[0] {PointList,PointList. <ponil Unit | pocons {Point,PointList}>}
align@1 create@0 {unlabel h.1,pocons ({p,unlabel h.2})}
  p: {Int,Int}
  h: compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>}
  h1: compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>}
  t: PlanList. <pnil Unit | pcons {compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>},PlanList}>
  xs: PlanList. <pnil Unit | pcons {compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>},PlanList}>
  (1) {h: compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((4) (4)) (Ponil Unit)),p: (3) (3),h1: compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((4) (4)) (Ponil Unit)),xs: Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((4) (4)) (Ponil Unit))) (Pnil Unit),t: Pnil Unit} @ {} -> compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))
  (1) {h: compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((4) (4)) (Ponil Unit)),p: (2) (4),h1: compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((4) (4)) (Ponil Unit)),xs: Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((4) (4)) (Ponil Unit))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pnil Unit)),t: Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pnil Unit)} @ {} -> compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))
  (1) {h: compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))),p: (2) (4),h1: compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))),xs: Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pnil Unit),t: Pnil Unit} @ {} -> compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))
  (1) {h: compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((4) (4)) (Ponil Unit)),p: (1) (2),h1: compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((4) (4)) (Ponil Unit)),xs: Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((4) (4)) (Ponil Unit))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit)))),t: Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit)))} @ {} -> compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))
  (1) {h: compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))),p: (1) (2),h1: compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))),xs: Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit))),t: Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit))} @ {} -> compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))
  (1) {h: compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))),p: (1) (2),h1: compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))),xs: Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit)),t: Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit)} @ {} -> compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))
  (1) {h: compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))),p: (1) (2),h1: compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))),xs: Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pnil Unit),t: Pnil Unit} @ {} -> compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))
  (1) {h: compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((4) (4)) (Ponil Unit)),p: (0) (1),h1: compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pocons ((4) (4)) (Ponil Unit)),xs: Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((4) (4)) (Ponil Unit))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pnil Unit)))))))),t: Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pnil Unit)))))))} @ {} -> compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit)))
  (1) {h: compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))),p: (0) (1),h1: compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))),xs: Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pnil Unit))))))),t: Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pnil Unit))))))} @ {} -> compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))))
  (1) {h: compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))),p: (0) (1),h1: compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))),xs: Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pnil Unit)))))),t: Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pnil Unit)))))} @ {} -> compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))
align term #2: compress[0] {PointList. <ponil Unit | pocons {Point,PointList}>,PointList. <ponil Unit | pocons {Point,PointList}>}
align@2 create@0 tmp1
  tmp1: {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>}
  xs: List. <nil Unit | cons {Int,List}>
  polist: PointList. <ponil Unit | pocons {{Int,Int},PointList}>
  w: Int
  pos: Int
  (2) {xs: Cons (4) (Nil Unit),tmp1: (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((4) (4)) (Ponil Unit)),polist: Pocons ((4) (4)) (Ponil Unit),pos: 4,w: 4} @ {} -> compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((4) (4)) (Ponil Unit))
  (2) {xs: Cons (3) (Nil Unit),tmp1: (Pocons ((7) (3)) (Ponil Unit)) (Pocons ((7) (3)) (Ponil Unit)),polist: Pocons ((7) (3)) (Ponil Unit),pos: 7,w: 3} @ {} -> compress[0] (Pocons ((7) (3)) (Ponil Unit)) (Pocons ((7) (3)) (Ponil Unit))
  (2) {xs: Cons (4) (Nil Unit),tmp1: (Pocons ((5) (4)) (Ponil Unit)) (Pocons ((5) (4)) (Ponil Unit)),polist: Pocons ((5) (4)) (Ponil Unit),pos: 5,w: 4} @ {} -> compress[0] (Pocons ((5) (4)) (Ponil Unit)) (Pocons ((5) (4)) (Ponil Unit))
  (2) {xs: Cons (2) (Nil Unit),tmp1: (Pocons ((4) (2)) (Ponil Unit)) (Pocons ((4) (2)) (Ponil Unit)),polist: Pocons ((4) (2)) (Ponil Unit),pos: 4,w: 2} @ {} -> compress[0] (Pocons ((4) (2)) (Ponil Unit)) (Pocons ((4) (2)) (Ponil Unit))
  (2) {xs: Cons (0) (Nil Unit),tmp1: (Pocons ((3) (0)) (Ponil Unit)) (Pocons ((3) (0)) (Ponil Unit)),polist: Pocons ((3) (0)) (Ponil Unit),pos: 3,w: 0} @ {} -> compress[0] (Pocons ((3) (0)) (Ponil Unit)) (Pocons ((3) (0)) (Ponil Unit))
  (2) {xs: Cons (0) (Nil Unit),tmp1: (Pocons ((4) (0)) (Ponil Unit)) (Pocons ((4) (0)) (Ponil Unit)),polist: Pocons ((4) (0)) (Ponil Unit),pos: 4,w: 0} @ {} -> compress[0] (Pocons ((4) (0)) (Ponil Unit)) (Pocons ((4) (0)) (Ponil Unit))
  (2) {xs: Cons (3) (Nil Unit),tmp1: (Pocons ((3) (3)) (Ponil Unit)) (Pocons ((3) (3)) (Ponil Unit)),polist: Pocons ((3) (3)) (Ponil Unit),pos: 3,w: 3} @ {} -> compress[0] (Pocons ((3) (3)) (Ponil Unit)) (Pocons ((3) (3)) (Ponil Unit))
align term #3: Int
align@3 eval (unlabel h)
  h: compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>}
  t: PlanList. <pnil Unit | pcons {compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>},PlanList}>
  xs: PlanList. <pnil Unit | pcons {compress[0] {PointList. <ponil Unit | pocons {{Int,Int},PointList}>,PointList. <ponil Unit | pocons {{Int,Int},PointList}>},PlanList}>
  (3) {h: compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pocons ((4) (4)) (Ponil Unit)),t: Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit))))))))))))))),xs: Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pocons ((4) (4)) (Ponil Unit))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit))))))))))))))))} @ {} -> 36
  (3) {h: compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))),t: Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit)))))))))))))),xs: Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit)))))))))))))))} @ {} -> 36
  (3) {h: compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))),t: Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit))))))))))))),xs: Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit))))))))))))))} @ {} -> 32
  (3) {h: compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))),t: Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit)))))))))))),xs: Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit)))))))))))))} @ {} -> 32
  (3) {h: compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))),t: Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit))))))))))),xs: Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit))))))))))))} @ {} -> 26
  (3) {h: compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))),t: Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit)))))))))),xs: Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit)))))))))))} @ {} -> 26
  (3) {h: compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))),t: Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit))))))))),xs: Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit))))))))))} @ {} -> 26
  (3) {h: compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))),t: Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit)))))))),xs: Pcons (compress[0] (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit)))))))))} @ {} -> 26
  (3) {h: compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))),t: Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit))))))),xs: Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))))) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit))))))))} @ {} -> 26
  (3) {h: compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))),t: Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit)))))),xs: Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((0) (1)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((2) (4)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit)))) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))) (Pcons (compress[0] (Pocons ((1) (2)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((0) (1)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((0) (1)) (Pocons ((4) (4)) (Ponil Unit))) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit)))))) (Pcons (compress[0] (Pocons ((4) (4)) (Ponil Unit)) (Pocons ((0) (1)) (Pocons ((1) (2)) (Pocons ((2) (4)) (Pocons ((3) (3)) (Pocons ((4) (4)) (Ponil Unit))))))) (Pnil Unit)))))))} @ {} -> 26
num = 0
start: start
node: start
  Compress[0] (PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>)([Param0,Param1,Param2,Param3]@Compress[0] (PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>))
  Int([Param0,Param1,Param2,Param3]@Int)
node: [Param0,Param1,Param2,Param3]@Compress[0] (PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>)
  Param1
node: [Param0,Param1,Param2,Param3]@Int
  +([Param0,Param1,Param2,Param3]@Int [Param0,Param1,Param2,Param3]@Int)
  -([Param0,Param1,Param2,Param3]@Int [Param0,Param1,Param2,Param3]@Int)
  0
  access0([Param0,Param1,Param2,Param3]@(Int * Int))
  access1([Param0,Param1,Param2,Param3]@(Int * Int))
  dis([Param0,Param1,Param2,Param3]@(Int * Int) [Param0,Param1,Param2,Param3]@(Int * Int))
  sqr([Param0,Param1,Param2,Param3]@Int)
node: [Param0,Param1,Param2,Param3]@(Int * Int)
  Param0
  prod([Param0,Param1,Param2,Param3]@Int [Param0,Param1,Param2,Param3]@Int)
num = 1
start: start
node: start
  Compress[0] (PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>)([Param0,Param1,Param2,Param3,Param4]@Compress[0] (PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>))
  Int([Param0,Param1,Param2,Param3,Param4]@Int)
node: [Param0,Param1,Param2,Param3,Param4]@Compress[0] (PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>)
  Param1
  Param2
node: [Param0,Param1,Param2,Param3,Param4]@Int
  +([Param0,Param1,Param2,Param3,Param4]@Int [Param0,Param1,Param2,Param3,Param4]@Int)
  -([Param0,Param1,Param2,Param3,Param4]@Int [Param0,Param1,Param2,Param3,Param4]@Int)
  0
  access0([Param0,Param1,Param2,Param3,Param4]@(Int * Int))
  access1([Param0,Param1,Param2,Param3,Param4]@(Int * Int))
  dis([Param0,Param1,Param2,Param3,Param4]@(Int * Int) [Param0,Param1,Param2,Param3,Param4]@(Int * Int))
  sqr([Param0,Param1,Param2,Param3,Param4]@Int)
node: [Param0,Param1,Param2,Param3,Param4]@(Int * Int)
  Param0
  prod([Param0,Param1,Param2,Param3,Param4]@Int [Param0,Param1,Param2,Param3,Param4]@Int)
num = 2
start: start
node: start
  Int([Param0,Param1,Param2,Param3,Param4]@Int)
node: [Param0,Param1,Param2,Param3,Param4]@PointList. <ponil Unit | pocons {{Int,Int},PointList}>
  Param2
  access0([Param0,Param1,Param2,Param3,Param4]@(PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>))
  access1([Param0,Param1,Param2,Param3,Param4]@(PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>))
node: [Param0,Param1,Param2,Param3,Param4]@Int
  Param3
  Param4
  +([Param0,Param1,Param2,Param3,Param4]@Int [Param0,Param1,Param2,Param3,Param4]@Int)
  -([Param0,Param1,Param2,Param3,Param4]@Int [Param0,Param1,Param2,Param3,Param4]@Int)
  0
  access0([Param0,Param1,Param2,Param3,Param4]@(Int * Int))
  access1([Param0,Param1,Param2,Param3,Param4]@(Int * Int))
  dis([Param0,Param1,Param2,Param3,Param4]@(Int * Int) [Param0,Param1,Param2,Param3,Param4]@(Int * Int))
  sqr([Param0,Param1,Param2,Param3,Param4]@Int)
node: [Param0,Param1,Param2,Param3,Param4]@(Int * Int)
  prod([Param0,Param1,Param2,Param3,Param4]@Int [Param0,Param1,Param2,Param3,Param4]@Int)
  head([Param0,Param1,Param2,Param3,Param4]@PointList. <ponil Unit | pocons {{Int,Int},PointList}>)
node: [Param0,Param1,Param2,Param3,Param4]@(PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>)
  Param0
  prod([Param0,Param1,Param2,Param3,Param4]@PointList. <ponil Unit | pocons {{Int,Int},PointList}> [Param0,Param1,Param2,Param3,Param4]@PointList. <ponil Unit | pocons {{Int,Int},PointList}>)
num = 3
start: start
node: start
  Compress[0] (PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>)([Param0,Param1,Param2]@Compress[0] (PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>))
  Int([Param0,Param1,Param2]@Int)
node: [Param0,Param1,Param2]@Int
  +([Param0,Param1,Param2]@Int [Param0,Param1,Param2]@Int)
  -([Param0,Param1,Param2]@Int [Param0,Param1,Param2]@Int)
  0
  access0([Param0,Param1,Param2]@(Int * Int))
  access1([Param0,Param1,Param2]@(Int * Int))
  min([Param0,Param1,Param2]@Int [Param0,Param1,Param2]@Int)
  dis([Param0,Param1,Param2]@(Int * Int) [Param0,Param1,Param2]@(Int * Int))
  sqr([Param0,Param1,Param2]@Int)
node: [Param0,Param1,Param2]@(Int * Int)
  prod([Param0,Param1,Param2]@Int [Param0,Param1,Param2]@Int)
node: [Param0,Param1,Param2]@Compress[0] (PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>)
  Param0
num = 0
start: start
node: start
  Int([Param0]@Int)
node: [Int@0,Int@1,Int@2]@Int
  Int@0
  Int@1
  Int@2
  +([Int@0,Int@1,Int@2]@Int [Int@0,Int@1,Int@2]@Int)
  -([Int@0,Int@1,Int@2]@Int [Int@0,Int@1,Int@2]@Int)
  0
  access0([Int@0,Int@1,Int@2]@(Int * Int))
  access1([Int@0,Int@1,Int@2]@(Int * Int))
  min([Int@0,Int@1,Int@2]@Int [Int@0,Int@1,Int@2]@Int)
  dis([Int@0,Int@1,Int@2]@(Int * Int) [Int@0,Int@1,Int@2]@(Int * Int))
  sqr([Int@0,Int@1,Int@2]@Int)
node: [Param0]@Int
  +([Param0]@Int [Param0]@Int)
  -([Param0]@Int [Param0]@Int)
  0
  access0([Param0]@(Int * Int))
  access1([Param0]@(Int * Int))
  fold[PointList. <ponil Unit | pocons {{Int,Int},PointList}>->Int]([]@Int [Int@0,Int@1,Int@2]@Int [Param0]@PointList. <ponil Unit | pocons {{Int,Int},PointList}>)
  min([Param0]@Int [Param0]@Int)
  eval_plist([Param0]@(Int * Int) [Param0]@PointList. <ponil Unit | pocons {{Int,Int},PointList}>)
  dis([Param0]@(Int * Int) [Param0]@(Int * Int))
  sqr([Param0]@Int)
node: []@Int
  +([]@Int []@Int)
  -([]@Int []@Int)
  0
  access0([]@(Int * Int))
  access1([]@(Int * Int))
  min([]@Int []@Int)
  dis([]@(Int * Int) []@(Int * Int))
  sqr([]@Int)
node: [Param0]@PointList. <ponil Unit | pocons {{Int,Int},PointList}>
  access0([Param0]@(PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>))
  access1([Param0]@(PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>))
node: [Param0]@(Int * Int)
  prod([Param0]@Int [Param0]@Int)
  head([Param0]@PointList. <ponil Unit | pocons {{Int,Int},PointList}>)
node: []@(Int * Int)
  prod([]@Int []@Int)
node: [Int@0,Int@1,Int@2]@(Int * Int)
  prod([Int@0,Int@1,Int@2]@Int [Int@0,Int@1,Int@2]@Int)
node: [Param0]@(PointList. <ponil Unit | pocons {{Int,Int},PointList}> * PointList. <ponil Unit | pocons {{Int,Int},PointList}>)
  Param0
  prod([Param0]@PointList. <ponil Unit | pocons {{Int,Int},PointList}> [Param0]@PointList. <ponil Unit | pocons {{Int,Int},PointList}>)

























































  [0] head(Param0.1).1
  [1] eval_plist((0,0),Param0.0)
  [2] head(Param0.0).1
  [3] eval_plist((0,0),Param0.1)
  [4] head(Param0.0).0
  [5] head(Param0.1).0
  [0] Param1 -> head(Param0.1).1
  [1] Param1 -> eval_plist((0,0),Param0.0)
  [2] Param1 -> head(Param0.0).1
  [3] Param1 -> eval_plist((0,0),Param0.1)
  [4] Param1 -> head(Param0.0).0
  [5] Param1 -> head(Param0.1).0
  [6] Param0.0
  [7] Param0.1
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
  [0] head(Param0.1).1
  [1] eval_plist((0,0),Param0.0)
  [2] head(Param0.0).1
  [3] eval_plist((0,0),Param0.1)
  [4] head(Param0.0).0
  [5] head(Param0.1).0
  [0] Param1 -> head(Param0.1).1
  [1] Param1 -> eval_plist((0,0),Param0.0)
  [2] Param1 -> head(Param0.0).1
  [3] Param1 -> eval_plist((0,0),Param0.1)
  [4] Param1 -> head(Param0.0).0
  [5] Param1 -> head(Param0.1).0
  [6] Param2 -> head(Param0.1).1
  [7] Param2 -> eval_plist((0,0),Param0.0)
  [8] Param2 -> head(Param0.0).1
  [9] Param2 -> eval_plist((0,0),Param0.1)
  [10] Param2 -> head(Param0.0).0
  [11] Param2 -> head(Param0.1).0
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
Academic license - for non-commercial use only - expires 2023-10-17
