
Tree :: Tree. <leaf Unit | node {Int,Tree,Tree}>
 leaf : Unit -> Tree'. <leaf Unit | node {Int,Tree',Tree'}>
 node : {Int,Tree,Tree} ->
        Tree'. <leaf Unit | node {Int,Tree',Tree'}>
 PTree :: PTree. <pleaf Unit | pnode {Int,
                                     PList. <pnil Unit | pcons {
                                     PTree,PList}>}>
pleaf : Unit ->
        PTree'. <pleaf Unit | pnode {Int,
                                     PList. <pnil Unit | pcons {
                                     PTree',PList}>}>
pnode : {Int,PList. <pnil Unit | pcons {PTree,PList}>} ->
        PTree'. <pleaf Unit | pnode {Int,
                                     PList. <pnil Unit | pcons {
                                     PTree',PList}>}>
PList :: PList. <pnil Unit | pcons {PTree,PList}>
pnil : Unit -> PList'. <pnil Unit | pcons {PTree,PList'}>
pcons : {PTree,PList} ->
        PList'. <pnil Unit | pcons {PTree,PList'}>
repr : PTree -> Tree'. <leaf Unit | node {Int,Tree',Tree'}>
spec : Tree -> Int
main : PTree -> Int

size: 97
compress-num: 2
label-num: 13
rewrite-size: 25
0.013703