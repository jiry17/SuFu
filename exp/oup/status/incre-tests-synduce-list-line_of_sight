
List :: List. <single Int | cons {Int,List}>
 single : Int -> List'. <single Int | cons {Int,List'}>
 cons : {Int,List} -> List'. <single Int | cons {Int,List'}>
 CList :: CList. <elt Int | cat {CList,CList}>
elt : Int -> CList'. <elt Int | cat {CList',CList'}>
cat : {CList,CList} -> CList'. <elt Int | cat {CList',CList'}>
max : Int -> Int -> Int
spec : List -> Bool
cat_list : List -> List -> List'. <single Int | cons {Int,List'}>
repr : CList -> List'. <single Int | cons {Int,List'}>
main : CList -> Bool

size: 117
compress-num: 1
label-num: 8
rewrite-size: 14
0.015406