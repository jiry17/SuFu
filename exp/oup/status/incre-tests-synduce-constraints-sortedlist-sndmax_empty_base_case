
CList :: CList. <empty Unit | elt Int | concat {CList,CList}>
 empty : Unit ->
         CList'. <empty Unit | elt Int | concat {CList',CList'}>
 elt : Int ->
       CList'. <empty Unit | elt Int | concat {CList',CList'}>
 concat : {CList,CList} ->
          CList'. <empty Unit | elt Int | concat {CList',CList'}>
 List :: List. <nil Unit | cons {Int,List}>
nil : Unit -> List'. <nil Unit | cons {Int,List'}>
cons : {Int,List} -> List'. <nil Unit | cons {Int,List'}>
cat : List -> List -> List
repr : CList -> List'. <nil Unit | cons {Int,List'}>
all_pos : CList -> Bool
geq_head : Int -> List -> Bool
is_sorted : List -> Bool
min : Int -> Int -> Int
max : Int -> Int -> Int
spec : List -> Int
target : CList -> CList
main : CList -> Int

size: 221
compress-num: 1
label-num: 10
rewrite-size: 18
0.021678