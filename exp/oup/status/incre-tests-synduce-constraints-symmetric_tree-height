
Tree :: Tree. <leaf Int | node {Int,Tree,Tree}>
 leaf : Int -> Tree'. <leaf Int | node {Int,Tree',Tree'}>
 node : {Int,Tree,Tree} ->
        Tree'. <leaf Int | node {Int,Tree',Tree'}>
 is_sym_pair : Tree -> Tree -> Bool
is_sym : Tree -> Bool
max : Int -> Int -> Int
spec : Tree -> Int
target : Tree -> Tree'. <leaf Int | node {Int,Tree',Tree'}>
List :: List. <elt Int | cons {Int,List}>
elt : Int -> List'. <elt Int | cons {Int,List'}>
cons : {Int,List} -> List'. <elt Int | cons {Int,List'}>
depth_lim : Int
gen : List -> Tree'. <leaf Int | node {Int,Tree',Tree'}>
main : List -> Int

size: 200
compress-num: 1
label-num: 7
rewrite-size: 14
0.018756