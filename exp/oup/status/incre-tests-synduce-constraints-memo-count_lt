
Tree :: Tree. <leaf Int | node {Int,Tree,Tree}>
 leaf : Int -> Tree'. <leaf Int | node {Int,Tree',Tree'}>
 node : {Int,Tree,Tree} ->
        Tree'. <leaf Int | node {Int,Tree',Tree'}>
 TreeMemo :: TreeMemo. <mleaf {Int,Int} | mnode {Int,Int,TreeMemo,
                                                TreeMemo}>
mleaf : {Int,Int} ->
        TreeMemo'. <mleaf {Int,Int} | mnode {Int,Int,TreeMemo',
                                             TreeMemo'}>
mnode : {Int,Int,TreeMemo,TreeMemo} ->
        TreeMemo'. <mleaf {Int,Int} | mnode {Int,Int,TreeMemo',
                                             TreeMemo'}>
memo : TreeMemo -> Int
is_memo : TreeMemo -> Bool
repr : TreeMemo -> Tree'. <leaf Int | node {Int,Tree',Tree'}>
spec : Tree -> Int
target : TreeMemo -> TreeMemo
gen : Tree ->
      TreeMemo'. <mleaf {Int,Int} | mnode {Int,Int,TreeMemo',
                                           TreeMemo'}>
main : TreeMemo -> Int

size: 266
compress-num: 1
label-num: 10
rewrite-size: 14
0.025658