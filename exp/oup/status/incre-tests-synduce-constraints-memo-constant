
Tree :: Tree. <leaf Int | node {Int,Tree,Tree}>
 leaf : Int -> Tree'. <leaf Int | node {Int,Tree',Tree'}>
 node : {Int,Tree,Tree} ->
        Tree'. <leaf Int | node {Int,Tree',Tree'}>
 TreeMemo :: TreeMemo. <mleaf Int | mnode {Int,Int,TreeMemo,
                                          TreeMemo}>
mleaf : Int ->
        TreeMemo'. <mleaf Int | mnode {Int,Int,TreeMemo',
                                       TreeMemo'}>
mnode : {Int,Int,TreeMemo,TreeMemo} ->
        TreeMemo'. <mleaf Int | mnode {Int,Int,TreeMemo',
                                       TreeMemo'}>
memo : TreeMemo -> Int
is_memo : TreeMemo -> Bool
repr : TreeMemo -> Tree'. <leaf Int | node {Int,Tree',Tree'}>
target : TreeMemo ->
         TreeMemo'. <mleaf Int | mnode {Int,Int,TreeMemo',
                                        TreeMemo'}>
spec : Tree -> Int
gen : Tree ->
      TreeMemo'. <mleaf Int | mnode {Int,Int,TreeMemo',TreeMemo'}>
main : TreeMemo -> Int

size: 163
compress-num: 1
label-num: 6
rewrite-size: 10
0.016971