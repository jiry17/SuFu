
Tree :: Tree. <leaf Int | node {Tree,Tree}>
leaf : Int -> Tree'. <leaf Int | node {Tree',Tree'}>
node : {Tree,Tree} -> Tree'. <leaf Int | node {Tree',Tree'}>
List :: List. <nil Unit | cons {Int,List}>
nil : Unit -> List'. <nil Unit | cons {Int,List'}>
cons : {Int,List} -> List'. <nil Unit | cons {Int,List'}>
cat : List -> List -> List
max : Int -> Int -> Int
depth : Tree -> Int
deepest : Tree -> {List'. <nil Unit | cons {Int,List'}>, Tree}
main : Tree -> List'. <nil Unit | cons {Int,List'}>

size: 144
compress-num: 1
label-num: 16
rewrite-size: 24
0.021223