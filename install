#!/bin/bash

# install opam and yojson
apt-get update
apt-get install ocaml ocaml-nox camlp4-extra opam
opam init
opam update
opam install yojson ocamlfind
eval $(opam env)

# make surface language
pushd src/surface
make
popd

# make and configure z3
pushd thirdparty/z3
python3 scripts/mk_make.py
cd build
make
sudo make install
z3path=`pwd`
echo ${z3path}
popd
sz3path=${z3path//\//\\\/}
sed -i "s/Z3PATH/${sz3path}/g" src/CMakeLists.txt

# install gurobi
pushd thirdparty
wget https://packages.gurobi.com/9.1/gurobi9.1.2_linux64.tar.gz
tar xvfz gurobi9.1.2_linux64.tar.gz
pushd gurobi912/linux64
gurobipath=`pwd`
sgurobipath=${gurobipath//\//\\\/}
popd
popd
sed -i "s/GUROBIPATH/${sgurobipath}/g" src/CMakeLists.txt
# select the static library of gurobi
gcc_major_version=`echo __GNUC__ | gcc -E -xc - | tail -n 1`
gcc_minor_version=`echo __GNUC_MINOR__ | gcc -E -xc - | tail -n 1`
gcc_version=$gcc_major_version.$gcc_minor_version
if [ $gcc_version = 4.6 ] || [ $gcc_version = 4.8 ]
then
    sed -i "s/5.2.a/4.2.a/g" src/CMakeLists.txt
fi

# build source
pushd src
path=`pwd`
spath=${path//\//\\\/}
sed -i "s/SOURCEPATH/\"${spath}\"/g" basic/config.cpp
popd

mkdir build
pushd build
cmake -G Ninja ../src
ninja
popd

